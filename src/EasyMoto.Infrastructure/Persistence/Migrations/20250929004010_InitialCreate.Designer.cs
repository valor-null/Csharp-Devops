// <auto-generated />
using System;
using EasyMoto.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyMoto.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250929004010_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyMoto.Domain.Entities.Filial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("cidade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("nome");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.ToTable("filiais", (string)null);
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.LegendaStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<string>("CorHex")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("cor_hex");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descricao");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("titulo");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PK_legenda_status");

                    b.ToTable("legenda_status", (string)null);
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Moto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<int>("Categoria")
                        .HasColumnType("int")
                        .HasColumnName("categoria");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("cor");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("FilialId")
                        .HasColumnType("int")
                        .HasColumnName("filial_id");

                    b.Property<int?>("LegendaStatusId")
                        .HasColumnType("int")
                        .HasColumnName("legenda_status_id");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("modelo");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("placa");

                    b.Property<string>("QrCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("qrcode");

                    b.Property<int>("StatusOperacional")
                        .HasColumnType("int")
                        .HasColumnName("status_operacional");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PK_moto");

                    b.ToTable("moto", (string)null);
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CriadaEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("criada_em");

                    b.Property<int>("Escopo")
                        .HasColumnType("int")
                        .HasColumnName("escopo");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("nvarchar(280)")
                        .HasColumnName("mensagem");

                    b.Property<int?>("MotoId")
                        .HasColumnType("int")
                        .HasColumnName("moto_id");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<int>("UsuarioOrigemId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_origem_id");

                    b.HasKey("Id")
                        .HasName("PK_notificacao");

                    b.ToTable("notificacao", (string)null);
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.NotificacaoLeitura", b =>
                {
                    b.Property<int>("NotificacaoId")
                        .HasColumnType("int")
                        .HasColumnName("notificacao_id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.Property<DateTime>("LidoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("lido_em");

                    b.HasKey("NotificacaoId", "UsuarioId")
                        .HasName("PK_notificacao_leitura");

                    b.ToTable("notificacao_leitura", (string)null);
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<string>("CepFilial")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("cep_filial");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("email");

                    b.Property<int>("FilialId")
                        .HasColumnType("int");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)")
                        .HasColumnName("nome_completo");

                    b.Property<int>("Perfil")
                        .HasColumnType("int")
                        .HasColumnName("perfil");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("senha_hash");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefone");

                    b.HasKey("Id")
                        .HasName("PK_usuarios");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.NotificacaoLeitura", b =>
                {
                    b.HasOne("EasyMoto.Domain.Entities.Notificacao", null)
                        .WithMany("Leituras")
                        .HasForeignKey("NotificacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Notificacao", b =>
                {
                    b.Navigation("Leituras");
                });
#pragma warning restore 612, 618
        }
    }
}
